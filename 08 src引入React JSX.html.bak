<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <script src="https://cdn.staticfile.org/react/16.4.0/umd/react.development.js"></script>
  <!--react.development开发版本-->
  <script src="https://cdn.staticfile.org/react-dom/16.4.0/umd/react-dom.development.js"></script>
  <!--react-dom.development 开发版本，有错误提示-->
  <script src="https://cdn.staticfile.org/babel-standalone/6.26.0/babel.min.js"></script>
  <!--babel 稳定、压缩版本-->
</head>

<body>
  <div id="root"></div>
  <!-- 独立文件：你的 React JSX 代码可以放在一个独立文件上，例如我们创建一个 helloworld_react.js 文件。
  然后在 HTML 文件中引入该 JS 文件。 -->
  <script type="text/babel" src="./helloworld_react.js"></script>
  <!-- Access to XMLHttpRequest at 'file:///F:/react/helloworld_react.js' from origin 'null' has been blocked by CORS policy: 
   Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https. -->
</body>
<!-- 
  加载js文件时使用了file协议，该协议会导致跨域，而使用htpp、https等协议时则没有跨域问题。而使用file协议则是因为在浏览器中查看html文件时没有起服务！平时使用webstorm时会自动起服务，所以没有注意到这个问题。

  解决方法是安装anywhere npm包，在命令行中执行命令anywhere即可启动服务，然后可以在浏览器中使用http协议来访问html和js，就不会再报跨域错误。 
  npm install anywhere -g
  anywhere
  或anywhere -p 8000
  http://localhost:8000/ 即可启动服务，将当前目录变成静态文件服务器的根目录，不存在跨域问题了

  Anywhere —— 随启随用的静态文件服务器   Running static file server anywhere. 随时随地将你的当前目录变成一个静态文件服务器的根目录。
-->

</html>